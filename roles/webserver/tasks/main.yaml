---

- name: Check if OS-specific vars exist
  ansible.builtin.stat:
    path: "{{ role_path }}/vars/{{ ansible_os_family }}.yaml"
  delegate_to: localhost
  become: false
  register: os_vars

- name: Load OS-specific vars
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ ansible_distribution }}.yaml'
        - '{{ ansible_os_family }}.yaml'
        - main.yaml
      paths:
        - '{{ role_path }}/vars'
  when: os_vars.stat.exists

- name: Include caddy
  ansible.builtin.include_tasks: caddy.yaml
  when: use_webserver == "caddy"

- name: Include nginx
  ansible.builtin.include_tasks: nginx.yaml
  when: use_webserver == "nginx"

- name: Include caddy
  ansible.builtin.include_tasks: apache.yaml
  when: use_webserver == "apache"

- name: Include logrotate
  ansible.builtin.include_tasks: logrotate.yaml
  when:
    - ansible_os_family != "OpenBSD"
    - use_webserver != "docker"
