---

- name: Install required packages
  ansible.builtin.package:
    name:
      - "{{ item }}"
  loop: "{{ webserver_config[use_webserver].packages }}"

- name: Include webroot
  ansible.builtin.include_tasks: webroot.yaml

- name: Include log
  ansible.builtin.include_tasks: log.yaml

- name: Ensure nginx configdir exists
  ansible.builtin.file:
    path: "{{ webserver_config[use_webserver].config_dir }}"
    state: directory
    owner: "{{ root.user }}"
    group: "{{ root.group }}"
    mode: "0644"

- name: Include configdir in nginx.conf
  ansible.builtin.lineinfile:
    path: "{{ system.etc }}/nginx/nginx.conf"
    line: "    include {{ webserver_config[use_webserver].config_dir }}/*.conf;"
    insertbefore: "}"
  when: "'http.d' in webserver_config[use_webserver].config_dir"
  notify:
    - Validate nginx

- name: Remove nginx default configuration
  ansible.builtin.file:
    path: "{{ webserver_config[use_webserver].config_dir }}/{{ item }}"
    state: absent
  loop:
    - default
    - default.conf
  notify:
    - Validate nginx

- name: Set types_hash_max_size;
  ansible.builtin.blockinfile:
    path: "{{ system.etc }}/nginx/nginx.conf"
    insertafter: '^http {'
    block: |
      types_hash_max_size 2048;
      types_hash_bucket_size 128;
  when: ansible_os_family == "Archlinux"

- name: Generate nginx (http) config
  ansible.builtin.template:
    src: "{{ role_path }}/templates/nginx-http.conf.j2"
    dest: "{{ webserver_config[use_webserver].config_dir }}/webtunnel-http.conf"
    owner: "{{ root.user }}"
    group: "{{ root.group }}"
    mode: "0644"
  register: nginx_http
  notify:
    - Validate nginx

- name: Include certificate request
  ansible.builtin.include_tasks: certificate.yaml

- name: Read random-string.txt
  ansible.builtin.slurp:
    src: "{{ tor.directory }}/random-string.txt"
  register: random_string_file

- name: Decode file content
  ansible.builtin.set_fact:
    random_string: "{{ random_string_file.content | b64decode }}"

- name: Generate nginx (https) config
  ansible.builtin.template:
    src: "{{ role_path }}/templates/nginx-https.conf.j2"
    dest: "{{ webserver_config[use_webserver].config_dir }}/webtunnel-https.conf"
    owner: "{{ root.user }}"
    group: "{{ root.group }}"
    mode: "0644"
  vars:
    webtunnel_path: "{{ random_string }}"
  notify:
    - Validate nginx
