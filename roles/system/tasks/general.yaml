---

- name: Block for all hosts
  tags:
      - general
      - system
      - setup
  block:
    - name: Install required packages
      ansible.builtin.package:
        name:
          - curl
          - wget
          - coreutils
          - git
          - htop
          - sudo
          - nano
          - bash
          - unzip
          - figlet
        state: present

    - name: Generate /etc/hosts file
      ansible.builtin.template:
        src: "{{ role_path }}/templates/hosts.j2"
        dest: /etc/hosts

- name: Block for OS-Specific tasks (Debian)
  when: ansible_os_family == "Debian"
  block:
    - name: Install OS-specific packages
      ansible.builtin.package:
        name:
          - apt-transport-https
          - ca-certificates
          - unattended-upgrades
          - gpg
          - golang
        state: present

    - name: Run dist-upgrade
      ansible.builtin.apt:
        upgrade: dist
        update_cache: yes

    - name: Configure unattended-upgrades
      ansible.builtin.copy:
        src: "{{ role_path }}/files/{{ ansible_os_family }}-unattended-upgrades"
        dest: "{{ system.etc }}/apt/apt.conf.d/50unattended-upgrades"

    - name: Symlink pyhton bin to /usr/local/bin
      ansible.builtin.file:
        src: /usr/bin/pthon3
        dest: /usr/local/bin/python3
        state: link
      remote_src: true

- name: Block for OS-Specific tasks (FreeBSD)
  when: ansible_os_family == "FreeBSD"
  block:
    - name: Install OS-specific packages (FreeBSD)
      ansible.builtin.package:
        name:
          - go
        state: present

    - name: Copy unattended-upgrade to server
      ansible.builtin.copy:
        src: "{{ role_path }}/files/{{ ansible_os_family }}-unattended-upgrades"
        dest: /usr/local/bin/unattended-upgrades
        mode: 0755
        owner: "{{ root.user }}"
        group: "{{ root.group }}"

    - name: Run "dist"-upgrade
      ansible.builtin.shell: /usr/local/bin/unattended-upgrades
      register: upgrade_result
      changed_when: '"Applying patches..." in upgrade_result.stdout_lines'

    - name: Create crontab entry for upgrades
      ansible.builtin.cron:
        name: "Fetch and install updates"
        minute: "0"
        hour: "14"
        job: "/usr/local/bin/unattended-upgrades"
        state: present