<VirtualHost *:443>
    ServerName {{ domain }}

    Protocols http/1.1 h2

    SSLEngine on
{% if use_custom_ssl %}
    SSLCertificateFile {{ system.etc }}/ssl/{{ domain }}.crt
    SSLCertificateKeyFile {{ system.etc }}/ssl/{{ domain }}.key
{% elif not use_custom_ssl %}
    SSLCertificateChainFile {{ certbot.config_dir }}/live/{{ domain }}/chain.pem
    SSLCertificateFile {{ certbot.config_dir }}/live/{{ domain }}/cert.pem
    SSLCertificateKeyFile {{ certbot.config_dir }}/live/{{ domain }}/privkey.pem
{% endif %}
    DocumentRoot /var/www/html

{% if reverse_proxy and reverse_proxy_url is defined %}
    ProxyVia On
    SetEnv proxy-initial-not-pooled 1
    SetEnv force-proxy-request-1.1 1

    SSLProxyEngine on

    ProxyPass / https://{{ reverse_proxy_url }}/
    ProxyPassReverse / https://{{ reverse_proxy_url }}/

    RequestHeader set Host "{{ reverse_proxy_url }}"
    RequestHeader set X-Real-IP %{REMOTE_ADDR}s
    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set X-Forwarded-Proto https

    CustomLog {{ webserver.access_log }} combined
    ErrorLog {{ webserver.error_log }}
{% else %}
    <Directory /var/www/html>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
{% endif %}
    SSLProtocol TLSv1.2 TLSv1.3
    SSLSessionCacheTimeout 900

    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384

    ProxyPreserveHost On
    ProxyRequests off

    Header always set Strict-Transport-Security "max-age=63072000"

    <Location /{{ webtunnel_path | trim }}>
        ProxyAddHeaders Off

        RequestHeader unset Accept-Encoding
        RequestHeader set X-Real-IP         "%{REMOTE_ADDR}s"
        RequestHeader set X-Forwarded-For   "%{REMOTE_ADDR}s"
        RequestHeader set X-Forwarded-Proto "%{REQUEST_SCHEME}s"
        Header        set Front-End-Https   on

        ProxyPass "ws://127.0.0.1:15000/%{REQUEST_URI}s"
        ProxyPassReverse "ws://127.0.0.1:15000%{REQUEST_URI}s"
    </Location>

    CustomLog /dev/null combined
    ErrorLog {{ webserver.error_log }}

</VirtualHost>