---

- name: Get WebSocket Bridge source code
  ansible.builtin.git:
    repo: https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/webtunnel
    dest: /tmp/webtunnel

- name: Build WebSocket Bridge
  ansible.builtin.command:
    cmd: "go build -o /usr/local/bin/webtunnel"
    chdir: /tmp/webtunnel/main/server
    creates: /usr/local/bin/webtunnel

- name: Install required packages
  ansible.builtin.package:
    name:
      - tor
    state: present

- name: Read random-string.txt
  ansible.builtin.slurp:
    src: "{{ tor.directory }}/random-string.txt"
  register: random_string_file

- name: Decode file content
  ansible.builtin.set_fact:
    random_string: "{{ random_string_file.content | b64decode }}"

- name: Configure WebSocket Bridge (torrc)
  ansible.builtin.template:
    src: "{{ role_path }}/templates/torrc.j2"
    dest: "{{ system.etc }}/tor/torrc"
    owner: "{{ root.user }}"
    group: "{{ root.group }}"
    mode: "0644"
  vars:
    webtunnel_path: "{{ random_string }}"
  notify: Restart tor

- name: Set {{ tor.directory }} owner- and groupship
  ansible.builtin.file:
    path: "{{ tor.directory }}"
    owner: "{{ tor.user }}"
    group: "{{ tor.group }}"
    state: directory
    recurse: true

- name: Block for OS-family Debian
  when: ansible_os_family == "Debian"
  block:
    - name: Add Tor GPG key
      ansible.builtin.apt_key:
        url: "https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc"
        state: present
        keyring: "/usr/share/keyrings/tor-archive-keyring.gpg"

    - name: Add Tor repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/tor-archive-keyring.gpg] https://deb.torproject.org/torproject.org stable main"
        state: present
        filename: tor

    - name: Add Tor repository-src
      ansible.builtin.apt_repository:
        repo: "deb-src [signed-by=/usr/share/keyrings/tor-archive-keyring.gpg] https://deb.torproject.org/torproject.org stable main"
        state: present
        filename: tor

    - name: Install required (deb) packages
      ansible.builtin.package:
        name:
          - deb.torproject.org-keyring
          - tor
        state: present

    - name: Configure tor apparmor
      ansible.builtin.blockinfile:
        path: /etc/apparmor.d/system_tor
        insertafter: '^  # Site-specific additions and overrides. See local/README for details.'
        block: '  /usr/local/bin/webtunnel ix,'
      notify: Reload apparomor

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

- name: Block for OS-family OpenBSD
  when: ansible_os_family == "OpenBSD"
  block:
    - name: Ensure tor login class configuration in /etc/login.conf
      ansible.builtin.blockinfile:
        path: /etc/login.conf
        block: |
          tor:\
              :openfiles-max=13500:\
              :tc=daemon:
      notify: Start tor

    - name: Apply kern.maxfiles
      ansible.posix.sysctl:
        name: kern.maxfiles
        value: 16000
        state: present
        reload: true
      notify: Start tor

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

- name: Block for OS-Family Archlinux
  when: ansible_os_family == "Archlinux"
  block:
    - name: Ensure User=tor and LimitNOFILE=65536 in systemd service
      ansible.builtin.lineinfile:
        path: "/usr/lib/systemd/system/tor.service"
        line: "LimitNOFILE=65536"
        insertafter: '^\[Service\]'
      notify: Reload daemon

    - name: Set Limits in security/limits.conf
      ansible.builtin.blockinfile:
        path: "{{ system.etc }}/security/limits.conf"
        block: |
          tor     soft    nofile    65536
          tor     hard    nofile    65536
          @tor    soft    nofile    65536
          @tor    hard    nofile    65536

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Wait until fingerprint file exists
  ansible.builtin.wait_for:
    path: "{{ tor.directory }}/fingerprint"
    state: present
    timeout: 300

- name: Get the connection strings for testing in Tor Browser
  get-connection-string:
    fingerprint_path: "{{ tor.directory }}/fingerprint"
    torrc_path: "{{ system.etc }}/tor/torrc"
  register: connection_string

- name: Write connection strings to a file
  ansible.builtin.lineinfile:
    path: "{{ role_path }}/../../connection-strings.txt"
    line: "{{ item }} #{{ inventory_hostname }}"
    create: true
    mode: "0644"
  with_items: "{{ connection_string.stdout_lines }}"
  delegate_to: localhost
  become: false
