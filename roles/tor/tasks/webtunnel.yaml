---

- name: Get WebSocket Bridge source code
  ansible.builtin.git:
    repo: https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/webtunnel
    dest: /tmp/webtunnel

- name: Build WebSocket Bridge
  ansible.builtin.shell:
    cmd: "go build -o /usr/local/bin/webtunnel"
    chdir: /tmp/webtunnel/main/server
    creates: /usr/local/bin/webtunnel

- name: Block for OS-Familiy: Debian
  when: ansible_os_family == "Debian"
  block:
    - name: Add Tor GPG key
      ansible.builtin.apt_key:
        url: "https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc"
        state: present
        keyring: "/usr/share/keyrings/tor-archive-keyring.gpg"

    - name: Add Tor repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/tor-archive-keyring.gpg] https://deb.torproject.org/torproject.org stable main"
        state: present
        filename: tor

    - name: Add Tor repository-src
      ansible.builtin.apt_repository:
        repo: "deb-src [signed-by=/usr/share/keyrings/tor-archive-keyring.gpg] https://deb.torproject.org/torproject.org stable main"
        state: present
        filename: tor

    - name: Install required (deb) packages
      ansible.builtin.package:
        name:
          - deb.torproject.org-keyring
        state: present
        update_cache: true

    - name: Configure tor apparmor
      ansible.builtin.blockinfile:
        path: /etc/apparmor.d/system_tor
        insertafter: '^  # Site-specific additions and overrides. See local/README for details.'
        block: '  /usr/local/bin/webtunnel ix,'
    
    - name: Reload apparmor
      ansible.builtin.shell: apparmor_parser -r /etc/apparmor.d/system_tor

- name: Install required packages
  ansible.builtin.package:
    name:
      - tor
    state: present
    update_cache: true

- name: Configure WebSocket Bridge
  ansible.builtin.template:
    src: "{{ role_path }}/templates/torrc.j2"
    dest: "{{ system.etc }}/tor/torrc"
  notify: Restart tor
  vars:
    webtunnel_path: "{{ lookup('file', role_path + '/files/' + inventory_hostname + '.txt') }}"

- name: Restart tor
  ansible.builtin.service:
    name: tor
    state: restarted

- name: Wait until fingerprint file exists
  ansible.builtin.wait_for:
    path: /var/lib/tor/fingerprint
    state: present
    timeout: 300

- name: Get the connection strings for testing
  get-connection-string:
    fingerprint_path: /var/lib/tor/fingerprint
    torrc_path: "{{ system.etc }}/tor/torrc"
  register: connection_string

- name: Delete existing connection strings file
  ansible.builtin.file:
    path: "{{ role_path }}/files/connection-strings.txt"
    state: absent
  delegate_to: localhost

- name: Write connection strings to a file
  ansible.builtin.lineinfile:
    path: "{{ role_path }}/files/connection-strings.txt"
    line: "{{ item }}"
    create: yes
  with_items: "{{ connection_string.stdout }}"
  delegate_to: localhost