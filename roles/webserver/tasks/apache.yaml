---

- name: Install required packages
  ansible.builtin.package:
    name: 
      - "{{ item }}"
  loop: "{{ webserver_config[use_webserver].packages }}"

- name: Include webroot
  ansible.builtin.include_tasks: webroot.yaml

- name: Ensure additional directories are present
  ansible.builtin.file:
    path: "{{ webserver_config[use_webserver].server_root }}/{{ item }}"
    state: directory
    owner: "{{ root.user }}"
    group: "{{ root.group }}"
  loop: "{{ webserver_config[use_webserver].extra_dirs }}"

- name: Symlink mime types
  ansible.builtin.file:
    src: /etc/mime.types
    dest: "{{ webserver_config[use_webserver].server_root }}/conf/mime.types"
    state: link
  when: ansible_os_family == "RedHat"

- name: Template apache configuration
  ansible.builtin.template:
    src: "{{ role_path }}/templates/apache.conf.j2"
    dest: "{{ webserver_config[use_webserver].config_file }}"
    owner: "{{ root.user }}"
    group: "{{ root.group }}"

- name: Ensure apache configdir exists
  ansible.builtin.file:
    path: "{{ webserver_config[use_webserver].config_dir }}"
    state: directory
    owner: "{{ root.user }}"
    group: "{{ root.group }}"

- name: Remove apache default configuration
  ansible.builtin.file:
    path: "{{ webserver_config[use_webserver].config_dir }}/{{ item }}"
    state: absent
  loop:
    - ssl.conf
    - 000-default.conf
    - default

- name: Enable apache modules
  community.general.apache2_module:
    name: "{{ item }}"
    state: present
  loop: "{{ webserver_config[use_webserver].modules }}"
  when: webserver_config[use_webserver].modules is defined

- name: Generate apache (http) config
  ansible.builtin.template:
    src: "{{ role_path }}/templates/apache-http.conf.j2"
    dest: "{{ webserver_config[use_webserver].config_dir }}/http.conf"
    owner: "{{ root.user }}"
    group: "{{ root.group }}"

- name: Ensure apache log directory exists
  ansible.builtin.file:
    path: /var/log/apache
    state: directory
    owner: "{{ webserver.user }}"
    group: "{{ webserver.group }}"

- name: Include certificate request
  ansible.builtin.include_tasks: certificate.yaml

- name: Start apache
  ansible.builtin.service:
    name: "{{ webserver_config[use_webserver].service_name }}"
    state: started
    enabled: true
  register: apache_start

- name: Restart apache
  ansible.builtin.service:
    name: "{{ webserver_config[use_webserver].service_name }}"
    state: restarted
  when: not apache_start.changed

- name: Generate apache (https) config
  ansible.builtin.template:
    src: "{{ role_path }}/templates/apache-https.conf.j2"
    dest: "{{ webserver_config[use_webserver].config_dir }}/https.conf"
    owner: "{{ root.user }}"
    group: "{{ root.group }}"
  vars:
    webtunnel_path: "{{ lookup('file', playbook_dir + '/roles/tor/files/' + inventory_hostname + '.txt') }}"
  notify:
    - Start apache
    - Restart apache