name: Test Ansible Playbook by Server

on:
  push:
    branches-ignore:
      - main

jobs:
  setup-ubuntu:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create ubuntu servers
        env:
          ANSIBLE_USER_PASSWORD: ${{ secrets.ANSIBLE_USER_PASSWORD }}
          ANSIBLE_NOCOLOR: 1
        run: |
          echo -e "\nANSIBLE_USER_PASSWORD=$ANSIBLE_USER_PASSWORD" >> .env
          ./ansible-playbook.sh actions-playbook.yaml --tags=create-server -i actions-inventory.ini -e "os=ubuntu"

      - name: Wait until the ubuntu servers are reacheable
        run: |
          python3 scripts/check_hosts.py --limit ubuntu -i actions-inventory.ini

      - name: Run Ansible Playbook Test for Ubuntu
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --limit=ubuntu -i actions-inventory.ini

      - name: Upload connection-strings
        uses: actions/upload-artifact@v4
        with:
          name: connection-strings-ubuntu
          path: connection-strings.txt

  test-ubuntu:
    needs: 
      - setup-ubuntu
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: connection-strings-ubuntu

      - name: Test connections
        run: |
          chmod +x scripts/test-connection.sh
          ./scripts/test-connection.sh

      - name: Shutdown ubuntu servers
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --tags=shutdown-server --limit=ubuntu -i actions-inventory.ini

  setup-alpine:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create alpine servers
        env:
          ANSIBLE_USER_PASSWORD: ${{ secrets.ANSIBLE_USER_PASSWORD }}
          ANSIBLE_NOCOLOR: 1
        run: |
          echo -e "\nANSIBLE_USER_PASSWORD=$ANSIBLE_USER_PASSWORD" >> .env
          ./ansible-playbook.sh actions-playbook.yaml --tags=create-server -i actions-inventory.ini -e "os=alpine"

      - name: Wait until the alpine servers are reacheable
        run: |
          python3 scripts/check_hosts.py --limit alpine -i actions-inventory.ini

      - name: Run Ansible Playbook Test for alpine
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --limit=alpine -i actions-inventory.ini

      - name: Upload connection-strings
        uses: actions/upload-artifact@v4
        with:
          name: connection-strings-alpine
          path: connection-strings.txt

  test-alpine:
    needs: 
      - setup-alpine
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: connection-strings-alpine
      
      - name: Test connections
        run: |
          chmod +x scripts/test-connection.sh
          ./scripts/test-connection.sh

      - name: Shutdown alpine servers
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --tags=shutdown-server --limit=alpine -i actions-inventory.ini

  setup-archlinux:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create archlinux servers
        env:
          ANSIBLE_USER_PASSWORD: ${{ secrets.ANSIBLE_USER_PASSWORD }}
          ANSIBLE_NOCOLOR: 1
        run: |
          echo -e "\nANSIBLE_USER_PASSWORD=$ANSIBLE_USER_PASSWORD" >> .env
          ./ansible-playbook.sh actions-playbook.yaml --tags=create-server -i actions-inventory.ini -e "os=archlinux"

      - name: Wait until the archlinux servers are reacheable
        run: |
          python3 scripts/check_hosts.py --limit archlinux -i actions-inventory.ini

      - name: Run Ansible Playbook Test for archlinux
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --limit=archlinux -i actions-inventory.ini

      - name: Upload connection-strings
        uses: actions/upload-artifact@v4
        with:
          name: connection-strings-archlinux
          path: connection-strings.txt

  test-archlinux:
    needs: 
      - setup-archlinux
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: connection-strings-archlinux
      
      - name: Test connections
        run: |
          chmod +x scripts/test-connection.sh
          ./scripts/test-connection.sh

      - name: Shutdown archlinux servers
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --tags=shutdown-server --limit=archlinux -i actions-inventory.ini

  setup-freebsd:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create freebsd servers
        env:
          ANSIBLE_USER_PASSWORD: ${{ secrets.ANSIBLE_USER_PASSWORD }}
          ANSIBLE_NOCOLOR: 1
        run: |
          echo -e "\nANSIBLE_USER_PASSWORD=$ANSIBLE_USER_PASSWORD" >> .env
          ./ansible-playbook.sh actions-playbook.yaml --tags=create-server -i actions-inventory.ini -e "os=freebsd"

      - name: Wait until the freebsd servers are reacheable
        run: |
          python3 scripts/check_hosts.py --limit freebsd -i actions-inventory.ini

      - name: Run Ansible Playbook Test for freebsd
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --limit=freebsd -i actions-inventory.ini

      - name: Upload connection-strings
        uses: actions/upload-artifact@v4
        with:
          name: connection-strings-freebsd
          path: connection-strings.txt

  test-freebsd:
    needs: 
      - setup-freebsd
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: connection-strings-freebsd
      
      - name: Test connections
        run: |
          chmod +x scripts/test-connection.sh
          ./scripts/test-connection.sh

      - name: Shutdown freebsd servers
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --tags=shutdown-server --limit=freebsd -i actions-inventory.ini

  setup-openbsd:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create openbsd servers
        env:
          ANSIBLE_USER_PASSWORD: ${{ secrets.ANSIBLE_USER_PASSWORD }}
          ANSIBLE_NOCOLOR: 1
        run: |
          echo -e "\nANSIBLE_USER_PASSWORD=$ANSIBLE_USER_PASSWORD" >> .env
          ./ansible-playbook.sh actions-playbook.yaml --tags=create-server -i actions-inventory.ini -e "os=openbsd"

      - name: Wait until the openbsd servers are reacheable
        run: |
          python3 scripts/check_hosts.py --limit openbsd -i actions-inventory.ini

      - name: Run Ansible Playbook Test for openbsd
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --limit=openbsd -i actions-inventory.ini

      - name: Upload connection-strings
        uses: actions/upload-artifact@v4
        with:
          name: connection-strings-openbsd
          path: connection-strings.txt

  test-openbsd:
    needs: 
      - setup-openbsd
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: connection-strings-openbsd
      
      - name: Test connections
        run: |
          chmod +x scripts/test-connection.sh
          ./scripts/test-connection.sh

      - name: Shutdown openbsd servers
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --tags=shutdown-server --limit=openbsd -i actions-inventory.ini

  setup-rhel:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create rhel servers
        env:
          ANSIBLE_USER_PASSWORD: ${{ secrets.ANSIBLE_USER_PASSWORD }}
          ANSIBLE_NOCOLOR: 1
        run: |
          echo -e "\nANSIBLE_USER_PASSWORD=$ANSIBLE_USER_PASSWORD" >> .env
          ./ansible-playbook.sh actions-playbook.yaml --tags=create-server -i actions-inventory.ini -e "os=rhel"

      - name: Wait until the rhel servers are reacheable
        run: |
          python3 scripts/check_hosts.py --limit rhel -i actions-inventory.ini

      - name: Run Ansible Playbook Test for rhel
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --limit=rhel -i actions-inventory.ini

      - name: Upload connection-strings
        uses: actions/upload-artifact@v4
        with:
          name: connection-strings-rhel
          path: connection-strings.txt

  test-rhel:
    needs: 
      - setup-rhel
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: connection-strings-rhel
      
      - name: Test connections
        run: |
          chmod +x scripts/test-connection.sh
          ./scripts/test-connection.sh

      - name: Shutdown rhel servers
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --tags=shutdown-server --limit=rhel -i actions-inventory.ini

  setup-suse:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create suse servers
        env:
          ANSIBLE_USER_PASSWORD: ${{ secrets.ANSIBLE_USER_PASSWORD }}
          ANSIBLE_NOCOLOR: 1
        run: |
          echo -e "\nANSIBLE_USER_PASSWORD=$ANSIBLE_USER_PASSWORD" >> .env
          ./ansible-playbook.sh actions-playbook.yaml --tags=create-server -i actions-inventory.ini -e "os=suse"

      - name: Wait until the suse servers are reacheable
        run: |
          python3 scripts/check_hosts.py --limit suse -i actions-inventory.ini

      - name: Run Ansible Playbook Test for suse
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --limit=suse -i actions-inventory.ini

      - name: Upload connection-strings
        uses: actions/upload-artifact@v4
        with:
          name: connection-strings-suse
          path: connection-strings.txt

  test-suse:
    needs: 
      - setup-suse
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: connection-strings-suse
      
      - name: Test connections
        run: |
          chmod +x scripts/test-connection.sh
          ./scripts/test-connection.sh

      - name: Shutdown suse servers
        run: |
          chmod +x ansible-playbook.sh
          ./ansible-playbook.sh playbook.yaml --tags=shutdown-server --limit=suse -i actions-inventory.ini