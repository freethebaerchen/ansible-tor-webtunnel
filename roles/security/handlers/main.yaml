---

- name: Start pf (FreeBSD)
  ansible.builtin.service:
    name: pf
    state: started
    enabled: true
  when: ansible_os_family == "FreeBSD"
  notify: Apply pf rules

- name: Start pf (OpenBSD)
  ansible.builtin.command: pfctl -e
  register: pfctl_status
  failed_when:
    - pfctl_status.rc != 0
    - "'pfctl: pf already enabled' not in pfctl_status.stderr"
  changed_when: "'pfctl: pf already enabled' not in pfctl_status.stderr"
  when: ansible_os_family == "OpenBSD"
  notify: Apply pf rules

- name: Apply pf rules
  ansible.builtin.command:
    cmd: pfctl -f {{ system.etc }}/pf.conf
  changed_when: true # Idempotently changes every time. Set just for ansible-lint.

- name: Apply ip4tables rules
  ansible.builtin.shell:
    cmd: iptables-restore < {{ system.etc }}/iptables/ip4tables_rules
  changed_when: true # Idempotently changes every time. Set just for ansible-lint.

- name: Apply ip6tables rules
  ansible.builtin.shell:
    cmd: ip6tables-restore < {{ system.etc }}/iptables/ip6tables_rules
  changed_when: true # Idempotently changes every time. Set just for ansible-lint.

- name: Restart bsdextend
  ansible.builtin.service:
    name: mac_bsdextended
    state: restarted
    enabled: true

- name: Restart system
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible for loading kernel modules"
    reboot_timeout: 600
  when: additional_packages.changed
